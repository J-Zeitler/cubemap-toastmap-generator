!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.PROJ=e()}}(function(){return function e(t,r,n){function i(o,a){if(!r[o]){if(!t[o]){var c="function"==typeof require&&require;if(!a&&c)return c(o,!0);if(s)return s(o,!0);var u=new Error("Cannot find module '"+o+"'");throw u.code="MODULE_NOT_FOUND",u}var d=r[o]={exports:{}};t[o][0].call(d.exports,function(e){var r=t[o][1][e];return i(r?r:e)},d,d.exports,e,t,r,n)}return r[o].exports}for(var s="function"==typeof require&&require,o=0;o<n.length;o++)i(n[o]);return i}({1:[function(e,t,r){"use strict";this.shaders=e("./shaders"),this.OctahedronGeometry=e("./octahedronGeometry"),this.CubeMapViewer=e("./cubeMapViewer"),this.QuadRenderer=e("./quadRenderer"),this.Display=e("./display")},{"./cubeMapViewer":2,"./display":3,"./octahedronGeometry":4,"./quadRenderer":5,"./shaders":6}],2:[function(e,t,r){"use strict";var n=e("./quadRenderer"),i=e("./zipper"),s=e("./shaders").cubeVert,o=e("./shaders").cubeFrag,a=function(e){if(THREE.Object3D.call(this),this.map=e,!(this.map instanceof THREE.WebGLRenderTargetCube))throw"CubeMapViewer: needs a 'THREE.WebGLRenderTargetCube' to construct";this.quadRenderer=new n;var t=new THREE.ShaderMaterial({vertexShader:s,fragmentShader:o,uniforms:{cubemap:{type:"t",value:e},side:{type:"v3",value:new THREE.Vector3}}}),r=t.clone();r.uniforms.side.value=new THREE.Vector3(0,1,0);var i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r);this.add(i),i.position.x=0,i.position.y=2,r=t.clone(),r.uniforms.side.value=new THREE.Vector3(1,0,0),i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r),this.add(i),i.position.x=-2,i.position.y=0,r=t.clone(),r.uniforms.side.value=new THREE.Vector3(0,0,-1),i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r),this.add(i),i.position.x=0,i.position.y=0,r=t.clone(),r.uniforms.side.value=new THREE.Vector3(-1,0,0),i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r),this.add(i),i.position.x=2,i.position.y=0,r=t.clone(),r.uniforms.side.value=new THREE.Vector3(0,0,1),i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r),this.add(i),i.position.x=4,i.position.y=0,r=t.clone(),r.uniforms.side.value=new THREE.Vector3(0,-1,0),i=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),r),this.add(i),i.position.x=0,i.position.y=-2};a.prototype=Object.create(THREE.Object3D.prototype),a.prototype.renderToImages=function(e,t,r,n){var s=[];this.children.forEach(function(r){s.push(this.quadRenderer.renderQuad(e,r,t))},this),i.zipImages(s,a.id,a.faceNames,function(e){saveAs(e,a.id+".zip"),r.call(n)},this)},a.id="cubemap",a.faceNames=["py.png","nx.png","pz.png","px.png","nz.png","ny.png"],t.exports=a},{"./quadRenderer":5,"./shaders":6,"./zipper":7}],3:[function(e,t,r){"use strict";var n=e("./shaders").toastVert,i=e("./shaders").toastFrag,s=(e("./shaders").cubeVert,e("./shaders").cubeFrag,e("./cubeMapViewer")),o=e("./quadRenderer"),a=function(e){this.container=e,this.sphereOffsetAngle=.5*Math.PI,this.quadRenderer=new o};a.prototype.init=function(e,t){this.camera=new THREE.PerspectiveCamera(90,this.container.offsetWidth/this.container.offsetHeight,.1,100),this.camera.position.set(0,0,3),this.camera.lookAt(new THREE.Vector3(0,0,0)),this.scene=new THREE.Scene,this.cubeScene=new THREE.Scene,this.renderer=new THREE.WebGLRenderer,this.renderer.setSize(this.container.offsetWidth,this.container.offsetHeight),this.renderer.setClearColor(16777215,1),this.container.appendChild(this.renderer.domElement),this.cubeCamera=new THREE.CubeCamera(.1,10,1024),this.cubeCamera.updateMatrixWorld(),this.cubeCamera.renderTarget.minFilter=THREE.LinearMipMapNearestFilter,this.equirectTex=THREE.ImageUtils.loadTexture("textures/equirectangular-projection.jpg"),this.equirectTex.wrapS=THREE.RepeatWrapping,this.sphere=new THREE.Mesh(new THREE.SphereGeometry(1,100,50),new THREE.MeshBasicMaterial({map:this.equirectTex,side:THREE.BackSide,depthWrite:!1})),this.sphere.rotation.y=this.sphereOffsetAngle,this.cubeScene.add(this.sphere),this.octahedron=new THREE.Mesh(new PROJ.OctahedronGeometry,new THREE.ShaderMaterial({vertexShader:n,fragmentShader:i,uniforms:{cubemap:{type:"t",value:this.cubeCamera.renderTarget}}})),this.octahedron.scale.set(2.5,2.5,2.5),this.octahedron.position.x=-1.5,this.octahedron.position.y=-2.5,this.scene.add(this.octahedron),this.cubeSides=new s(this.cubeCamera.renderTarget),this.scene.add(this.cubeSides),this.cubeSides.scale.set(.4,.4,.4),this.cubeSides.position.x=-.5,this.cubeSides.position.y=1.5,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,window.addEventListener("resize",this.handleWindowResize.bind(this),!1)},a.prototype.handleWindowResize=function(e){this.camera.aspect=this.container.offsetWidth/this.container.offsetHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.container.offsetWidth,this.container.offsetHeight)},a.prototype.animate=function(){this.renderer.render(this.scene,this.camera),this.cubeCamera.updateCubeMap(this.renderer,this.cubeScene),requestAnimationFrame(this.animate.bind(this))},a.prototype.downloadCubeMapImages=function(e,t,r){this.cubeSides.renderToImages(this.renderer,e,function(){t.call(r)},this)},a.prototype.downloadToastMapImage=function(e){this.quadRenderer.renderQuad(this.renderer,this.octahedron,e,!0,function(e){saveAs(e,"toastmap.png")})},a.prototype.setEquirectImage=function(e){this.equirectTex.image=e,this.equirectTex.needsUpdate=!0},a.prototype.setSphereRotation=function(e){this.sphere.rotation.y=this.sphereOffsetAngle+e},t.exports=a},{"./cubeMapViewer":2,"./quadRenderer":5,"./shaders":6}],4:[function(e,t,r){"use strict";var n=function(){THREE.BufferGeometry.call(this),this.type="OctahedronGeometry";var e=new Float32Array([0,1,0,1,0,0,-1,0,0,0,0,1,0,0,-1,0,-1,0,0,-1,0,0,-1,0,0,-1,0]),t=new Float32Array([.5,.5,.5,1,.5,0,1,.5,0,.5,1,1,0,1,0,0,1,0]),r=new Uint16Array([0,3,1,0,1,4,0,4,2,0,2,3,5,1,3,6,4,1,7,2,4,8,3,2]);this.addAttribute("position",new THREE.BufferAttribute(e,3)),this.addAttribute("index",new THREE.BufferAttribute(r,1)),this.addAttribute("uv",new THREE.BufferAttribute(t,2)),this.computeBoundingBox()};n.prototype=Object.create(THREE.BufferGeometry.prototype),n.prototype.constructor=n,t.exports=n},{}],5:[function(e,t,r){"use strict";var n=e("./octahedronGeometry"),i=function(){this.setupScene()};i.prototype.setupScene=function(){this.scene=new THREE.Scene,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,.5,1.5),this.camera.position.set(0,0,1),this.camera.lookAt(new THREE.Vector3(0,0,0)),this.camera.up.set(0,0,1)},i.prototype.renderQuad=function(e,t,r,i,s,o){var a=t.clone();this.scene.add(a),t.geometry instanceof n?(a.position.set(-1,-1,0),a.scale.set(2,2,2)):a.position.set(0,0,0);var c=e.domElement.width,u=e.domElement.height;e.setSize(r,r),e.render(this.scene,this.camera,!1);var d="";return i?e.domElement.toBlob(function(e){s.call(o,e)}):d=e.domElement.toDataURL("image/png"),this.scene.remove(a),e.setSize(c,u),d},t.exports=i},{"./octahedronGeometry":4}],6:[function(e,t,r){"use strict";t.exports.cubeVert="uniform float scale;\n\nvarying vec3 pos;\n\nvec3 cube2sphere(vec3 cube) {\n  cube /= scale;\n\n  float x2 = cube.x*cube.x;\n  float y2 = cube.y*cube.y;\n  float z2 = cube.z*cube.z;\n  vec3 sphere = vec3(\n    cube.x*sqrt(1.0 - y2*0.5 - z2*0.5 + y2*z2*0.3333333),\n    cube.y*sqrt(1.0 - x2*0.5 - z2*0.5 + x2*z2*0.3333333),\n    cube.z*sqrt(1.0 - x2*0.5 - y2*0.5 + x2*y2*0.3333333)\n  );\n\n  return sphere*scale;\n}\n\nvoid main() {\n  pos = position;\n\n  vec3 spherePos = (modelMatrix*vec4(position, 1.0)).xyz;\n  spherePos = cube2sphere(position);\n\n  gl_Position = projectionMatrix *\n                modelViewMatrix *\n                vec4(position, 1.0);\n}\n",t.exports.cubeFrag="uniform samplerCube cubemap;\nuniform vec3 side;\n\nvarying vec3 pos;\n\nvoid main() {\n  vec3 reflDir = pos;\n\n  reflDir.x *= -1.0;\n\n  if (abs(side.x) > 0.0) {\n    reflDir.xy = side.x < 0.0 ? vec2(reflDir.y, -reflDir.x) : reflDir.yx;\n    reflDir.yz = reflDir.xy;\n    reflDir.x = side.x;\n  } else if (abs(side.y) > 0.0) {\n    reflDir.y *= side.y > 0.0 ? 1.0 : -1.0;\n    reflDir.xz = reflDir.xy;\n    reflDir.y = side.y;\n  } else if (abs(side.z) > 0.0) {\n    reflDir.x *= side.z < 0.0 ? 1.0 : -1.0;\n    reflDir.z = side.z;\n  }\n\n  gl_FragColor = textureCube(cubemap, reflDir);\n  // gl_FragColor = vec4(reflDir, 1.0);\n}",t.exports.toastVert="varying vec3 octahedronPos;\n\nvoid main() {\n  octahedronPos = position;\n\n  gl_Position = projectionMatrix *\n                modelViewMatrix *\n                vec4(uv, 0.0, 1.0);\n}\n",t.exports.toastFrag="uniform samplerCube cubemap;\n\nvarying vec3 octahedronPos;\n\n#define isqrt2 0.70710676908493042\nvec3 cubify(vec3 s) {\n  float xx2 = s.x*s.x*2.0;\n  float yy2 = s.y*s.y*2.0;\n\n  vec2 vCube = vec2(xx2 - yy2, yy2 - xx2);\n\n  float ii = vCube.y - 3.0;\n  ii *= ii;\n\n  float isqrt = -sqrt(ii - 12.0*xx2) + 3.0;\n\n  vCube = sqrt(vCube + isqrt);\n  vCube *= isqrt2;\n\n  return sign(s)*vec3(vCube, 1.0);\n}\n\nvec3 sphere2cube(vec3 sphere) {\n  vec3 f = abs(sphere);\n\n  bool a = f.y >= f.x && f.y >= f.z;\n  bool b = f.x >= f.z;\n\n  return a ? cubify(sphere.xzy).xzy : b ? cubify(sphere.yzx).zxy : cubify(sphere);\n}\n\nvoid main() {\n  vec3 reflDir = sphere2cube(normalize(octahedronPos));\n\n  gl_FragColor = textureCube(cubemap, reflDir);\n}"},{}],7:[function(e,t,r){"use strict";var n={};n.zipBase64Array=function(e,t,r,i,s){var o=new JSZip;n.base64ArrayToBuffer(e,function(e){e.forEach(function(e,n){var i=[t,r[n]].join("/");o.file(i,e)});var n=o.generate({type:"blob"});i.call(s,n)})},n.zipImages=n.zipBase64Array,n.base64ArrayToBuffer=function(e,t,r){var n=[],i=0;e.forEach(function(s){var o=new XMLHttpRequest;o.open("GET",s,!0),o.responseType="arraybuffer",o.onreadystatechange=function(s){4===o.readyState&&200===o.status&&(n.push(o.response),i++,i===e.length&&t.call(r,n))},o.send()})},t.exports=n},{}]},{},[1])(1)});